{"ast":null,"code":"var _jsxFileName = \"/Users/ameiling/Documents/PWA-Starter/src/views/viewport/Viewport.view.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route } from 'react-router';\nimport { Alignment, Button, Classes, Navbar, NavbarDivider, NavbarGroup, NavbarHeading } from \"@blueprintjs/core\"; // Add all view\n// STORY 1 -> Dynamicly load all view with the router somehow\n// would be nice if we could just read all the views that are exported\n// from the views directory\n\nimport HomeView from '../home';\nimport CounterView from '../counter/Counter.container';\nexport default class ViewportView extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rootViewPort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"navViewport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(NavbarGroup, {\n      align: Alignment.LEFT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(NavbarHeading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Plenum\"), React.createElement(NavbarDivider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: Classes.MINIMAL,\n      icon: \"home\",\n      text: \"Home\",\n      onClick: this.props.toHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: Classes.MINIMAL,\n      icon: \"document\",\n      text: \"Counters\",\n      onClick: this.props.toCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(NavbarGroup, {\n      align: Alignment.RIGHT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"bp3-button bp3-minimal bp3-icon-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"bp3-button bp3-minimal bp3-icon-notifications\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"bp3-button bp3-minimal bp3-icon-cog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"mainViewport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(HomeView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/counter\",\n      render: () => React.createElement(CounterView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"404\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ameiling/Documents/PWA-Starter/src/views/viewport/Viewport.view.js"],"names":["React","Component","Switch","Route","Alignment","Button","Classes","Navbar","NavbarDivider","NavbarGroup","NavbarHeading","HomeView","CounterView","ViewportView","render","LEFT","MINIMAL","props","toHome","toCounter","RIGHT"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,cAA9B;AACA,SACIC,SADJ,EAEIC,MAFJ,EAGIC,OAHJ,EAIIC,MAJJ,EAKIC,aALJ,EAMIC,WANJ,EAOIC,aAPJ,QAQO,mBARP,C,CASA;AACA;AACA;AACA;;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,eAAe,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAChDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEV,SAAS,CAACW,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAET,OAAO,CAACU,OADvB;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,MAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EASI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAEZ,OAAO,CAACU,OADvB;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWE,SAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ,EAiBI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEf,SAAS,CAACgB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,sCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,+CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,SAAS,EAAC,qCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAjBJ,CADJ,EA0BI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAE,MAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,MAAM,EAAE,MAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CA1BJ,CADJ;AAoCH;;AAtC+C","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router'\nimport {\n    Alignment,\n    Button,\n    Classes,\n    Navbar,\n    NavbarDivider,\n    NavbarGroup,\n    NavbarHeading\n} from \"@blueprintjs/core\";\n// Add all view\n// STORY 1 -> Dynamicly load all view with the router somehow\n// would be nice if we could just read all the views that are exported\n// from the views directory\nimport HomeView from '../home'\nimport CounterView from '../counter/Counter.container'\n\nexport default class ViewportView extends Component {\n    render() {\n        return (\n            <div className=\"rootViewPort\">\n                <Navbar className=\"navViewport\">\n                    <NavbarGroup align={Alignment.LEFT}>\n                        <NavbarHeading>Plenum</NavbarHeading>\n                        <NavbarDivider />\n                        <Button\n                            className={Classes.MINIMAL}\n                            icon=\"home\"\n                            text=\"Home\" \n                            onClick={this.props.toHome} />\n\n                        <Button\n                            className={Classes.MINIMAL}\n                            icon=\"document\"\n                            text=\"Counters\" \n                            onClick={this.props.toCounter} />\n                    </NavbarGroup>\n\n                    <NavbarGroup align={Alignment.RIGHT}>\n                        <button className=\"bp3-button bp3-minimal bp3-icon-user\"></button>\n                        <button className=\"bp3-button bp3-minimal bp3-icon-notifications\"></button>\n                        <button className=\"bp3-button bp3-minimal bp3-icon-cog\"></button>\n                    </NavbarGroup>\n\n                </Navbar>\n\n                <div className=\"mainViewport\">\n                    <Switch>\n                        <Route exact path=\"/\" render={() => (<HomeView />)} />\n                        <Route exact path=\"/counter\" render={() => (<CounterView />)} />\n                        <Route render={() => (<div>404</div>)} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}